{"version":3,"sources":["Components/Product/Product.module.css","Components/CheckoutCart/CheckoutCart.module.css","Components/PopupCheckout/PopupCheckout.module.css","Components/CartDetails/CartDetails.module.css","Components/Product/Product.js","Components/CartDetails/CartDetails.js","Components/PopupCheckout/PopupCheckout.js","Components/CheckoutCart/CheckoutCart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Product","props","mainbox","classes","discountbox","imagebox","contentbox","buttonsbox","item","itemDetails","className","src","image","alt","itemName","itemCompany","itemQuantity","itemMRP","itemPrice","itemDiscount","onClick","updateCart","bind","id","disabled","quantity","Details","details","amount","checkout","PopupCheckout","popup","clearcart","closer","style","color","total","background","Checkout","receipthead","table","data","map","index","key","Number","colSpan","empty","buy","back","App","state","productList","cartItems","cartQuantity","totalAmount","error","changedQuantity","console","log","cartData","cartItem","find","a","push","setState","backFromcheckout","buyFromCheckOut","clearCart","cartReset","forEach","fetch","then","response","json","Items","catch","err","this","CheckoutCart","length","CartDetails","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fdda8aef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainbox\":\"Product_mainbox__2AC2Q\",\"discountbox\":\"Product_discountbox__3nNL-\",\"contentbox\":\"Product_contentbox__3km8y\",\"buttonsbox\":\"Product_buttonsbox__33EWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"receipthead\":\"CheckoutCart_receipthead__K0bjb\",\"table\":\"CheckoutCart_table__1rbA9\",\"mainbox\":\"CheckoutCart_mainbox__1Fv6q\",\"buy\":\"CheckoutCart_buy__3zk_c\",\"empty\":\"CheckoutCart_empty__133qN\",\"maindiv\":\"CheckoutCart_maindiv__2ZH0u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"PopupCheckout_popup__1tspy\",\"background\":\"PopupCheckout_background__3UD1Q\",\"closer\":\"PopupCheckout_closer__2UKa-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"CartDetails_details__1aa9p\"};","import React from \"react\";\r\nimport classes from \"./Product.module.css\"\r\n\r\n// component to create single product.\r\nconst Product=(props)=>{\r\n    let {mainbox,discountbox,imagebox,contentbox,buttonsbox} = classes;\r\n\r\n   let item = props.itemDetails;\r\n\r\n    return (\r\n        <div className={mainbox}>\r\n            <div className={imagebox}>\r\n                {<img src = {item.image} alt={item.itemName}/>}\r\n            </div>\r\n            <div className={contentbox}>\r\n                <h3>{item.itemCompany||\"\"}</h3>\r\n                <h4>{item.itemName||\"\"}</h4>\r\n                <span>{item.itemQuantity||\"\"}</span>\r\n                <span>{item.itemMRP?\"MRP \"+item.itemMRP:null}</span>\r\n                <span>{item.itemPrice?\"Rs \"+item.itemPrice:null}</span>\r\n            </div>\r\n            <div className={discountbox}>\r\n                {item.itemDiscount?`${item.itemDiscount}% OFF`:null}\r\n            </div>\r\n            <div className={buttonsbox}>\r\n                <button onClick={props.updateCart.bind(null,item.id,1)}>Add to Cart</button>\r\n                <button  onClick={props.updateCart.bind(null,item.id,-1)} disabled={(item.quantity<1)?true:false}>-</button>\r\n                <span>{item.quantity}</span>\r\n                <button onClick={props.updateCart.bind(null,item.id,1)}>+</button>\r\n\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product;","import React from \"react\";\r\nimport classes from \"./CartDetails.module.css\"\r\n\r\n \r\nconst Details=(props)=>{\r\n\r\n    return (\r\n        <div className = {classes.details}>\r\n            <h5>Total Amount: {props.amount}</h5>\r\n            <button onClick={props.checkout.bind()}>Checkout</button>\r\n            <h5>Quantity: {props.quantity}</h5>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details;","import React,{Fragment} from \"react\";\r\nimport classes from \"./PopupCheckout.module.css\";\r\n// Final popup to be showed after buying.\r\nconst PopupCheckout=(props)=>{\r\n\r\n\r\n    return (\r\n\r\n    <Fragment>\r\n        <div className={classes.popup} onClick={()=>{props.clearcart();}}>\r\n            <span className={classes.closer} >&#10006;</span>\r\n            <h3 style={{color:\"maroon\"}}>Thanks for Shopping here</h3>\r\n            <h5 style={{color:\"teal\"}}>Rs {props.total} Amount Paid</h5>\r\n            <h5>Please Visit Again!!!</h5>\r\n            <h5>For any queries contact : 8129896521</h5>\r\n        </div>\r\n        <div className={classes.background} ></div>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default PopupCheckout;","import React from \"react\";\r\nimport classes from \"./CheckoutCart.module.css\"\r\nimport PopupCheckOut from \"../PopupCheckout/PopupCheckout\"\r\n\r\n\r\nconst Checkout=(props)=>{\r\n\r\n\r\nreturn (\r\n    <div className={classes.mainbox}>\r\n        <h2 className = {classes.receipthead}>Items Purchased</h2>\r\n        {props.total?(<table className={classes.table} >\r\n            <thead>\r\n                <tr>\r\n                    <th>Sr No.</th>\r\n                    <th>Name</th>\r\n                    <th>Price</th>\r\n                    <th>Quantity</th>\r\n                    <th>Total</th>\r\n                </tr>\r\n            </thead>\r\n                <tbody>\r\n                        {props.data.map((item,index)=>{\r\n                        return <tr key={item.id}>\r\n                                <td>{index+1}</td>\r\n                                <td>{item.itemName}</td>\r\n                                <td>{item.itemPrice}</td>\r\n                                <td>{item.quantity}</td>                \r\n                                <td>{Number(item.itemPrice)*item.quantity}</td>                \r\n                            </tr>\r\n                        })}\r\n                        <tr><td colSpan={4}>Total Amount</td><td>Rs. {props.total}</td></tr>\r\n                </tbody>\r\n        </table>):<div className={classes.empty}>Nothing in Cart</div>}\r\n        \r\n        <button className={classes.buy}  disabled={props.total===0}onClick={props.buy.bind()}>Buy</button>\r\n        <button onClick={props.back.bind()} >Back</button>\r\n    \r\n        {(props.popup)?<PopupCheckOut total={props.total} clearcart={props.clearcart} />:null} \r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Checkout;","import React, { Component } from 'react'\nimport './App.css';\nimport Product from \"./Components/Product/Product\"\nimport CartDetails from \"./Components/CartDetails/CartDetails\"\nimport CheckoutCart from \"./Components/CheckoutCart/CheckoutCart\"\n\n\n\n\nexport class App extends Component {\n//setting intail state\n  state = {\n    productList:[],\n    cartItems:[],\n    cartQuantity:0,\n    totalAmount:0,\n    checkout:false,\n    popup:false,\n    error:false\n\n  }\n  componentDidMount(){\n    \n    fetch('data/Items.json').then(response => {\n      console.log(response.data);\n      return response.json();\n    }).then(data => {\n      console.log(data.Items);\n      this.setState({\n        productList:data.Items\n      })\n      console.log(data);\n    }).catch(err => {\n      this.setState({\n        error:err\n      })\n    });\n  \n  }\n//updateCart functionality to handle the changes in the cart\n  updateCart = (id,changedQuantity)=>{\n    console.log(this.state.productList);\n    let{cartItems,cartQuantity,totalAmount} = this.state\n      let data=[...this.state.productList];\n      let cartData=[...cartItems];\n      let cartItem=cartData.find(a=>a.id===id);\n      let itemDetails=data.find(a=>a.id===id);\n      if(itemDetails.quantity===0 && changedQuantity===-1)return;\n      itemDetails.quantity=itemDetails.quantity+changedQuantity;\n      if(cartItem)cartItem.quantity=cartItem.quantity+changedQuantity;\n      else cartData.push({...itemDetails});\n      let total=totalAmount;\n      let quantity=cartQuantity;\n      total=Number(total)+(Number(itemDetails.itemPrice)*changedQuantity);\n      quantity=quantity+changedQuantity;\n      \n      this.setState({\n        cartItems:cartData,\n        cartQuantity:quantity,\n        totalAmount:total\n      })\n      \n  }\n  //to track the change when clicking on checkout button\n  checkout = ()=>{\n    this.setState({\n    checkout:true\n    })\n  }\n  //to move back from checkout page to cart page\n  backFromcheckout =()=>{\n    this.setState({\n      checkout:false\n    })\n  }\n// to show the popup\n  buyFromCheckOut = ()=>{\n    this.setState({\n      popup:true\n    })\n  }\n\n  //to clear the cart and set is back to intial state\n  clearCart = ()=>{\n    let cartReset = this.state.productList;\n    cartReset.forEach(item=> {\n      if (item.quantity !== 0) {\n         item.quantity = 0;\n      }\n  });\n    this.setState({\n      productList:cartReset,\n      cartItems:[],\n      cartQuantity:0,\n      totalAmount:0,\n      checkout:true,\n      popup:false\n    })\n  }\n\n  render() {\n    \n    \n    return (\n      !this.state.error?\n      !this.state.checkout?\n      (<div className = \"App\">\n        {this.state.productList&&this.state.productList.length&&this.state.productList.map(item=><Product \n        key={item.itemName}\n         itemDetails={{...item}}\n         updateCart = {this.updateCart}/>)} \n         <CartDetails amount={this.state.totalAmount}\n         quantity={this.state.cartQuantity}\n         checkout={this.checkout}/>\n      </div>):\n      (\n        <div className= \"App\">\n        <CheckoutCart data = {this.state.cartItems} \n        total={this.state.totalAmount}\n         back={this.backFromcheckout} \n         popup={this.state.popup}\n         buy={this.buyFromCheckOut}\n         clearcart = {this.clearCart}/>\n         </div>\n      ):<h1>Something wrong happened. Be patient . We will be right back</h1>\n      \n    )\n  }\n}\n\nexport default App\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}